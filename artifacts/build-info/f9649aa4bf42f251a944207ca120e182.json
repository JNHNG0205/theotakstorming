{
	"id": "f9649aa4bf42f251a944207ca120e182",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Transaction.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract SimpleTransaction {\r\n    // Mapping to store the balance of each address\r\n    mapping(address => uint256) public balances;\r\n\r\n    // Event to emit when a transaction is made\r\n    event Transaction(address indexed from, address indexed to, uint256 amount);\r\n\r\n    // Function to deposit Ether into the contract\r\n    function deposit() public payable {\r\n        require(msg.value > 0, \"Deposit amount must be greater than zero.\");\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n\r\n    // Function to withdraw Ether from the contract\r\n    function withdraw(uint256 _amount) public {\r\n        require(_amount <= balances[msg.sender], \"Insufficient balance.\");\r\n        balances[msg.sender] -= _amount;\r\n        payable(msg.sender).transfer(_amount);\r\n    }\r\n\r\n    // Function to transfer Ether to another address\r\n    function transfer(address payable _to, uint256 _amount) public {\r\n        require(_amount <= balances[msg.sender], \"Insufficient balance.\");\r\n        require(_to != address(0), \"Invalid address.\");\r\n        \r\n        balances[msg.sender] -= _amount;\r\n        balances[_to] += _amount;\r\n        _to.transfer(_amount);\r\n\r\n        emit Transaction(msg.sender, _to, _amount);\r\n    }\r\n\r\n    // Function to check the balance of an address\r\n    function getBalance(address _address) public view returns (uint256) {\r\n        return balances[_address];\r\n    }\r\n\r\n    // Fallback function to accept Ether sent directly to the contract\r\n    receive() external payable {\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Transaction.sol": {
				"SimpleTransaction": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transaction",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Transaction.sol\":121:1660  contract SimpleTransaction {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Transaction.sol\":121:1660  contract SimpleTransaction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Transaction.sol\":1640:1649  msg.value */\n      callvalue\n        /* \"Transaction.sol\":1616:1624  balances */\n      0x00\n        /* \"Transaction.sol\":1616:1636  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":1625:1635  msg.sender */\n      caller\n        /* \"Transaction.sol\":1616:1636  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Transaction.sol\":1616:1649  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"Transaction.sol\":121:1660  contract SimpleTransaction {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Transaction.sol\":208:251  mapping(address => uint256) public balances */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Transaction.sol\":670:886  function withdraw(uint256 _amount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Transaction.sol\":948:1326  function transfer(address payable _to, uint256 _amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Transaction.sol\":445:609  function deposit() public payable {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Transaction.sol\":1386:1498  function getBalance(address _address) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Transaction.sol\":208:251  mapping(address => uint256) public balances */\n    tag_16:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Transaction.sol\":670:886  function withdraw(uint256 _amount) public {... */\n    tag_23:\n        /* \"Transaction.sol\":742:750  balances */\n      0x00\n        /* \"Transaction.sol\":742:762  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":751:761  msg.sender */\n      caller\n        /* \"Transaction.sol\":742:762  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Transaction.sol\":731:738  _amount */\n      dup2\n        /* \"Transaction.sol\":731:762  _amount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Transaction.sol\":723:788  require(_amount <= balances[msg.sender], \"Insufficient balance.\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Transaction.sol\":823:830  _amount */\n      dup1\n        /* \"Transaction.sol\":799:807  balances */\n      0x00\n        /* \"Transaction.sol\":799:819  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":808:818  msg.sender */\n      caller\n        /* \"Transaction.sol\":799:819  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Transaction.sol\":799:830  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Transaction.sol\":849:859  msg.sender */\n      caller\n        /* \"Transaction.sol\":841:869  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Transaction.sol\":841:878  payable(msg.sender).transfer(_amount) */\n      0x08fc\n        /* \"Transaction.sol\":870:877  _amount */\n      dup3\n        /* \"Transaction.sol\":841:878  payable(msg.sender).transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n        /* \"Transaction.sol\":670:886  function withdraw(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"Transaction.sol\":948:1326  function transfer(address payable _to, uint256 _amount) public {... */\n    tag_28:\n        /* \"Transaction.sol\":1041:1049  balances */\n      0x00\n        /* \"Transaction.sol\":1041:1061  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":1050:1060  msg.sender */\n      caller\n        /* \"Transaction.sol\":1041:1061  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Transaction.sol\":1030:1037  _amount */\n      dup2\n        /* \"Transaction.sol\":1030:1061  _amount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"Transaction.sol\":1022:1087  require(_amount <= balances[msg.sender], \"Insufficient balance.\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_39\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"Transaction.sol\":1121:1122  0 */\n      0x00\n        /* \"Transaction.sol\":1106:1123  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Transaction.sol\":1106:1109  _to */\n      dup3\n        /* \"Transaction.sol\":1106:1123  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Transaction.sol\":1098:1144  require(_to != address(0), \"Invalid address.\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"Transaction.sol\":1189:1196  _amount */\n      dup1\n        /* \"Transaction.sol\":1165:1173  balances */\n      0x00\n        /* \"Transaction.sol\":1165:1185  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":1174:1184  msg.sender */\n      caller\n        /* \"Transaction.sol\":1165:1185  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Transaction.sol\":1165:1196  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Transaction.sol\":1224:1231  _amount */\n      dup1\n        /* \"Transaction.sol\":1207:1215  balances */\n      0x00\n        /* \"Transaction.sol\":1207:1220  balances[_to] */\n      dup1\n        /* \"Transaction.sol\":1216:1219  _to */\n      dup5\n        /* \"Transaction.sol\":1207:1220  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Transaction.sol\":1207:1231  balances[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_51\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_51:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Transaction.sol\":1242:1245  _to */\n      dup2\n        /* \"Transaction.sol\":1242:1254  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Transaction.sol\":1242:1263  _to.transfer(_amount) */\n      0x08fc\n        /* \"Transaction.sol\":1255:1262  _amount */\n      dup3\n        /* \"Transaction.sol\":1242:1263  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n        /* \"Transaction.sol\":1305:1308  _to */\n      dup2\n        /* \"Transaction.sol\":1281:1318  Transaction(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Transaction.sol\":1293:1303  msg.sender */\n      caller\n        /* \"Transaction.sol\":1281:1318  Transaction(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82\n        /* \"Transaction.sol\":1310:1317  _amount */\n      dup4\n        /* \"Transaction.sol\":1281:1318  Transaction(msg.sender, _to, _amount) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Transaction.sol\":948:1326  function transfer(address payable _to, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Transaction.sol\":445:609  function deposit() public payable {... */\n    tag_30:\n        /* \"Transaction.sol\":510:511  0 */\n      0x00\n        /* \"Transaction.sol\":498:507  msg.value */\n      callvalue\n        /* \"Transaction.sol\":498:511  msg.value > 0 */\n      gt\n        /* \"Transaction.sol\":490:557  require(msg.value > 0, \"Deposit amount must be greater than zero.\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"Transaction.sol\":592:601  msg.value */\n      callvalue\n        /* \"Transaction.sol\":568:576  balances */\n      0x00\n        /* \"Transaction.sol\":568:588  balances[msg.sender] */\n      dup1\n        /* \"Transaction.sol\":577:587  msg.sender */\n      caller\n        /* \"Transaction.sol\":568:588  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Transaction.sol\":568:601  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_59\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_59:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Transaction.sol\":445:609  function deposit() public payable {... */\n      jump\t// out\n        /* \"Transaction.sol\":1386:1498  function getBalance(address _address) public view returns (uint256) {... */\n    tag_34:\n        /* \"Transaction.sol\":1445:1452  uint256 */\n      0x00\n        /* \"Transaction.sol\":1472:1480  balances */\n      dup1\n        /* \"Transaction.sol\":1472:1490  balances[_address] */\n      0x00\n        /* \"Transaction.sol\":1481:1489  _address */\n      dup4\n        /* \"Transaction.sol\":1472:1490  balances[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Transaction.sol\":1465:1490  return balances[_address] */\n      swap1\n      pop\n        /* \"Transaction.sol\":1386:1498  function getBalance(address _address) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_61:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_62:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_11:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_87\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_61\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_88\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_61\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_90\n      tag_62\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":424:460   */\n    tag_89:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":554:671   */\n    tag_64:\n        /* \"#utility.yul\":663:664   */\n      0x00\n        /* \"#utility.yul\":660:661   */\n      dup1\n        /* \"#utility.yul\":653:665   */\n      revert\n        /* \"#utility.yul\":800:926   */\n    tag_66:\n        /* \"#utility.yul\":837:844   */\n      0x00\n        /* \"#utility.yul\":877:919   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":870:875   */\n      dup3\n        /* \"#utility.yul\":866:920   */\n      and\n        /* \"#utility.yul\":855:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1028   */\n    tag_67:\n        /* \"#utility.yul\":969:976   */\n      0x00\n        /* \"#utility.yul\":998:1022   */\n      tag_96\n        /* \"#utility.yul\":1016:1021   */\n      dup3\n        /* \"#utility.yul\":998:1022   */\n      tag_66\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":987:1022   */\n      swap1\n      pop\n        /* \"#utility.yul\":932:1028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1034:1156   */\n    tag_68:\n        /* \"#utility.yul\":1107:1131   */\n      tag_98\n        /* \"#utility.yul\":1125:1130   */\n      dup2\n        /* \"#utility.yul\":1107:1131   */\n      tag_67\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1100:1105   */\n      dup2\n        /* \"#utility.yul\":1097:1132   */\n      eq\n        /* \"#utility.yul\":1087:1150   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1146:1147   */\n      0x00\n        /* \"#utility.yul\":1143:1144   */\n      dup1\n        /* \"#utility.yul\":1136:1148   */\n      revert\n        /* \"#utility.yul\":1087:1150   */\n    tag_99:\n        /* \"#utility.yul\":1034:1156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1162:1301   */\n    tag_69:\n        /* \"#utility.yul\":1208:1213   */\n      0x00\n        /* \"#utility.yul\":1246:1252   */\n      dup2\n        /* \"#utility.yul\":1233:1253   */\n      calldataload\n        /* \"#utility.yul\":1224:1253   */\n      swap1\n      pop\n        /* \"#utility.yul\":1262:1295   */\n      tag_101\n        /* \"#utility.yul\":1289:1294   */\n      dup2\n        /* \"#utility.yul\":1262:1295   */\n      tag_68\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1162:1301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1307:1636   */\n    tag_15:\n        /* \"#utility.yul\":1366:1372   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1403:1412   */\n      dup3\n        /* \"#utility.yul\":1394:1401   */\n      dup5\n        /* \"#utility.yul\":1390:1413   */\n      sub\n        /* \"#utility.yul\":1386:1418   */\n      slt\n        /* \"#utility.yul\":1383:1502   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1421:1500   */\n      tag_104\n      tag_64\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1383:1502   */\n    tag_103:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1566:1619   */\n      tag_105\n        /* \"#utility.yul\":1611:1618   */\n      dup5\n        /* \"#utility.yul\":1602:1608   */\n      dup3\n        /* \"#utility.yul\":1591:1600   */\n      dup6\n        /* \"#utility.yul\":1587:1609   */\n      add\n        /* \"#utility.yul\":1566:1619   */\n      tag_69\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1556:1619   */\n      swap2\n      pop\n        /* \"#utility.yul\":1512:1629   */\n      pop\n        /* \"#utility.yul\":1307:1636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1642:1760   */\n    tag_70:\n        /* \"#utility.yul\":1729:1753   */\n      tag_107\n        /* \"#utility.yul\":1747:1752   */\n      dup2\n        /* \"#utility.yul\":1729:1753   */\n      tag_61\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1724:1727   */\n      dup3\n        /* \"#utility.yul\":1717:1754   */\n      mstore\n        /* \"#utility.yul\":1642:1760   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1766:1988   */\n    tag_18:\n        /* \"#utility.yul\":1859:1863   */\n      0x00\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1886:1895   */\n      dup3\n        /* \"#utility.yul\":1882:1900   */\n      add\n        /* \"#utility.yul\":1874:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1910:1981   */\n      tag_109\n        /* \"#utility.yul\":1978:1979   */\n      0x00\n        /* \"#utility.yul\":1967:1976   */\n      dup4\n        /* \"#utility.yul\":1963:1980   */\n      add\n        /* \"#utility.yul\":1954:1960   */\n      dup5\n        /* \"#utility.yul\":1910:1981   */\n      tag_70\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1766:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2116   */\n    tag_71:\n        /* \"#utility.yul\":2067:2091   */\n      tag_111\n        /* \"#utility.yul\":2085:2090   */\n      dup2\n        /* \"#utility.yul\":2067:2091   */\n      tag_61\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2057:2092   */\n      eq\n        /* \"#utility.yul\":2047:2110   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2047:2110   */\n    tag_112:\n        /* \"#utility.yul\":1994:2116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2261   */\n    tag_72:\n        /* \"#utility.yul\":2168:2173   */\n      0x00\n        /* \"#utility.yul\":2206:2212   */\n      dup2\n        /* \"#utility.yul\":2193:2213   */\n      calldataload\n        /* \"#utility.yul\":2184:2213   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2255   */\n      tag_114\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2222:2255   */\n      tag_71\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2122:2261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2267:2596   */\n    tag_22:\n        /* \"#utility.yul\":2326:2332   */\n      0x00\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"#utility.yul\":2363:2372   */\n      dup3\n        /* \"#utility.yul\":2354:2361   */\n      dup5\n        /* \"#utility.yul\":2350:2373   */\n      sub\n        /* \"#utility.yul\":2346:2378   */\n      slt\n        /* \"#utility.yul\":2343:2462   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2381:2460   */\n      tag_117\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2343:2462   */\n    tag_116:\n        /* \"#utility.yul\":2501:2502   */\n      0x00\n        /* \"#utility.yul\":2526:2579   */\n      tag_118\n        /* \"#utility.yul\":2571:2578   */\n      dup5\n        /* \"#utility.yul\":2562:2568   */\n      dup3\n        /* \"#utility.yul\":2551:2560   */\n      dup6\n        /* \"#utility.yul\":2547:2569   */\n      add\n        /* \"#utility.yul\":2526:2579   */\n      tag_72\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2516:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2472:2589   */\n      pop\n        /* \"#utility.yul\":2267:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2706   */\n    tag_73:\n        /* \"#utility.yul\":2647:2654   */\n      0x00\n        /* \"#utility.yul\":2676:2700   */\n      tag_120\n        /* \"#utility.yul\":2694:2699   */\n      dup3\n        /* \"#utility.yul\":2676:2700   */\n      tag_66\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2665:2700   */\n      swap1\n      pop\n        /* \"#utility.yul\":2602:2706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:2850   */\n    tag_74:\n        /* \"#utility.yul\":2793:2825   */\n      tag_122\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2793:2825   */\n      tag_73\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2786:2791   */\n      dup2\n        /* \"#utility.yul\":2783:2826   */\n      eq\n        /* \"#utility.yul\":2773:2844   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2837:2838   */\n      dup1\n        /* \"#utility.yul\":2830:2842   */\n      revert\n        /* \"#utility.yul\":2773:2844   */\n    tag_123:\n        /* \"#utility.yul\":2712:2850   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:3011   */\n    tag_75:\n        /* \"#utility.yul\":2910:2915   */\n      0x00\n        /* \"#utility.yul\":2948:2954   */\n      dup2\n        /* \"#utility.yul\":2935:2955   */\n      calldataload\n        /* \"#utility.yul\":2926:2955   */\n      swap1\n      pop\n        /* \"#utility.yul\":2964:3005   */\n      tag_125\n        /* \"#utility.yul\":2999:3004   */\n      dup2\n        /* \"#utility.yul\":2964:3005   */\n      tag_74\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2856:3011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3507   */\n    tag_27:\n        /* \"#utility.yul\":3093:3099   */\n      0x00\n        /* \"#utility.yul\":3101:3107   */\n      dup1\n        /* \"#utility.yul\":3150:3152   */\n      0x40\n        /* \"#utility.yul\":3138:3147   */\n      dup4\n        /* \"#utility.yul\":3129:3136   */\n      dup6\n        /* \"#utility.yul\":3125:3148   */\n      sub\n        /* \"#utility.yul\":3121:3153   */\n      slt\n        /* \"#utility.yul\":3118:3237   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3156:3235   */\n      tag_128\n      tag_64\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3118:3237   */\n    tag_127:\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3301:3362   */\n      tag_129\n        /* \"#utility.yul\":3354:3361   */\n      dup6\n        /* \"#utility.yul\":3345:3351   */\n      dup3\n        /* \"#utility.yul\":3334:3343   */\n      dup7\n        /* \"#utility.yul\":3330:3352   */\n      add\n        /* \"#utility.yul\":3301:3362   */\n      tag_75\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3291:3362   */\n      swap3\n      pop\n        /* \"#utility.yul\":3247:3372   */\n      pop\n        /* \"#utility.yul\":3411:3413   */\n      0x20\n        /* \"#utility.yul\":3437:3490   */\n      tag_130\n        /* \"#utility.yul\":3482:3489   */\n      dup6\n        /* \"#utility.yul\":3473:3479   */\n      dup3\n        /* \"#utility.yul\":3462:3471   */\n      dup7\n        /* \"#utility.yul\":3458:3480   */\n      add\n        /* \"#utility.yul\":3437:3490   */\n      tag_72\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3427:3490   */\n      swap2\n      pop\n        /* \"#utility.yul\":3382:3500   */\n      pop\n        /* \"#utility.yul\":3017:3507   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3513:3682   */\n    tag_76:\n        /* \"#utility.yul\":3597:3608   */\n      0x00\n        /* \"#utility.yul\":3631:3637   */\n      dup3\n        /* \"#utility.yul\":3626:3629   */\n      dup3\n        /* \"#utility.yul\":3619:3638   */\n      mstore\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3666:3669   */\n      dup3\n        /* \"#utility.yul\":3662:3676   */\n      add\n        /* \"#utility.yul\":3647:3676   */\n      swap1\n      pop\n        /* \"#utility.yul\":3513:3682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3688:3859   */\n    tag_77:\n        /* \"#utility.yul\":3828:3851   */\n      0x496e73756666696369656e742062616c616e63652e0000000000000000000000\n        /* \"#utility.yul\":3824:3825   */\n      0x00\n        /* \"#utility.yul\":3816:3822   */\n      dup3\n        /* \"#utility.yul\":3812:3826   */\n      add\n        /* \"#utility.yul\":3805:3852   */\n      mstore\n        /* \"#utility.yul\":3688:3859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4231   */\n    tag_78:\n        /* \"#utility.yul\":4007:4010   */\n      0x00\n        /* \"#utility.yul\":4028:4095   */\n      tag_134\n        /* \"#utility.yul\":4092:4094   */\n      0x15\n        /* \"#utility.yul\":4087:4090   */\n      dup4\n        /* \"#utility.yul\":4028:4095   */\n      tag_76\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4021:4095   */\n      swap2\n      pop\n        /* \"#utility.yul\":4104:4197   */\n      tag_135\n        /* \"#utility.yul\":4193:4196   */\n      dup3\n        /* \"#utility.yul\":4104:4197   */\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4222:4224   */\n      0x20\n        /* \"#utility.yul\":4217:4220   */\n      dup3\n        /* \"#utility.yul\":4213:4225   */\n      add\n        /* \"#utility.yul\":4206:4225   */\n      swap1\n      pop\n        /* \"#utility.yul\":3865:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4237:4656   */\n    tag_39:\n        /* \"#utility.yul\":4403:4407   */\n      0x00\n        /* \"#utility.yul\":4441:4443   */\n      0x20\n        /* \"#utility.yul\":4430:4439   */\n      dup3\n        /* \"#utility.yul\":4426:4444   */\n      add\n        /* \"#utility.yul\":4418:4444   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4499   */\n      dup2\n        /* \"#utility.yul\":4484:4488   */\n      dup2\n        /* \"#utility.yul\":4480:4500   */\n      sub\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4465:4474   */\n      dup4\n        /* \"#utility.yul\":4461:4478   */\n      add\n        /* \"#utility.yul\":4454:4501   */\n      mstore\n        /* \"#utility.yul\":4518:4649   */\n      tag_137\n        /* \"#utility.yul\":4644:4648   */\n      dup2\n        /* \"#utility.yul\":4518:4649   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4510:4649   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4856   */\n    tag_41:\n        /* \"#utility.yul\":4702:4706   */\n      0x00\n        /* \"#utility.yul\":4722:4742   */\n      tag_139\n        /* \"#utility.yul\":4740:4741   */\n      dup3\n        /* \"#utility.yul\":4722:4742   */\n      tag_61\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4717:4742   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4776   */\n      tag_140\n        /* \"#utility.yul\":4774:4775   */\n      dup4\n        /* \"#utility.yul\":4756:4776   */\n      tag_61\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4751:4776   */\n      swap3\n      pop\n        /* \"#utility.yul\":4800:4801   */\n      dup3\n        /* \"#utility.yul\":4797:4798   */\n      dup3\n        /* \"#utility.yul\":4793:4802   */\n      sub\n        /* \"#utility.yul\":4785:4802   */\n      swap1\n      pop\n        /* \"#utility.yul\":4824:4825   */\n      dup2\n        /* \"#utility.yul\":4818:4822   */\n      dup2\n        /* \"#utility.yul\":4815:4826   */\n      gt\n        /* \"#utility.yul\":4812:4849   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4829:4847   */\n      tag_142\n      tag_62\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4812:4849   */\n    tag_141:\n        /* \"#utility.yul\":4662:4856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4862:5028   */\n    tag_79:\n        /* \"#utility.yul\":5002:5020   */\n      0x496e76616c696420616464726573732e00000000000000000000000000000000\n        /* \"#utility.yul\":4998:4999   */\n      0x00\n        /* \"#utility.yul\":4990:4996   */\n      dup3\n        /* \"#utility.yul\":4986:5000   */\n      add\n        /* \"#utility.yul\":4979:5021   */\n      mstore\n        /* \"#utility.yul\":4862:5028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5034:5400   */\n    tag_80:\n        /* \"#utility.yul\":5176:5179   */\n      0x00\n        /* \"#utility.yul\":5197:5264   */\n      tag_145\n        /* \"#utility.yul\":5261:5263   */\n      0x10\n        /* \"#utility.yul\":5256:5259   */\n      dup4\n        /* \"#utility.yul\":5197:5264   */\n      tag_76\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5190:5264   */\n      swap2\n      pop\n        /* \"#utility.yul\":5273:5366   */\n      tag_146\n        /* \"#utility.yul\":5362:5365   */\n      dup3\n        /* \"#utility.yul\":5273:5366   */\n      tag_79\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5391:5393   */\n      0x20\n        /* \"#utility.yul\":5386:5389   */\n      dup3\n        /* \"#utility.yul\":5382:5394   */\n      add\n        /* \"#utility.yul\":5375:5394   */\n      swap1\n      pop\n        /* \"#utility.yul\":5034:5400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5406:5825   */\n    tag_49:\n        /* \"#utility.yul\":5572:5576   */\n      0x00\n        /* \"#utility.yul\":5610:5612   */\n      0x20\n        /* \"#utility.yul\":5599:5608   */\n      dup3\n        /* \"#utility.yul\":5595:5613   */\n      add\n        /* \"#utility.yul\":5587:5613   */\n      swap1\n      pop\n        /* \"#utility.yul\":5659:5668   */\n      dup2\n        /* \"#utility.yul\":5653:5657   */\n      dup2\n        /* \"#utility.yul\":5649:5669   */\n      sub\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5634:5643   */\n      dup4\n        /* \"#utility.yul\":5630:5647   */\n      add\n        /* \"#utility.yul\":5623:5670   */\n      mstore\n        /* \"#utility.yul\":5687:5818   */\n      tag_148\n        /* \"#utility.yul\":5813:5817   */\n      dup2\n        /* \"#utility.yul\":5687:5818   */\n      tag_80\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5679:5818   */\n      swap1\n      pop\n        /* \"#utility.yul\":5406:5825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:6059   */\n    tag_81:\n        /* \"#utility.yul\":5971:6005   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":5967:5968   */\n      0x00\n        /* \"#utility.yul\":5959:5965   */\n      dup3\n        /* \"#utility.yul\":5955:5969   */\n      add\n        /* \"#utility.yul\":5948:6006   */\n      mstore\n        /* \"#utility.yul\":6040:6051   */\n      0x68616e207a65726f2e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6035:6037   */\n      0x20\n        /* \"#utility.yul\":6027:6033   */\n      dup3\n        /* \"#utility.yul\":6023:6038   */\n      add\n        /* \"#utility.yul\":6016:6052   */\n      mstore\n        /* \"#utility.yul\":5831:6059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6065:6431   */\n    tag_82:\n        /* \"#utility.yul\":6207:6210   */\n      0x00\n        /* \"#utility.yul\":6228:6295   */\n      tag_151\n        /* \"#utility.yul\":6292:6294   */\n      0x29\n        /* \"#utility.yul\":6287:6290   */\n      dup4\n        /* \"#utility.yul\":6228:6295   */\n      tag_76\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6221:6295   */\n      swap2\n      pop\n        /* \"#utility.yul\":6304:6397   */\n      tag_152\n        /* \"#utility.yul\":6393:6396   */\n      dup3\n        /* \"#utility.yul\":6304:6397   */\n      tag_81\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6422:6424   */\n      0x40\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6413:6425   */\n      add\n        /* \"#utility.yul\":6406:6425   */\n      swap1\n      pop\n        /* \"#utility.yul\":6065:6431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6437:6856   */\n    tag_58:\n        /* \"#utility.yul\":6603:6607   */\n      0x00\n        /* \"#utility.yul\":6641:6643   */\n      0x20\n        /* \"#utility.yul\":6630:6639   */\n      dup3\n        /* \"#utility.yul\":6626:6644   */\n      add\n        /* \"#utility.yul\":6618:6644   */\n      swap1\n      pop\n        /* \"#utility.yul\":6690:6699   */\n      dup2\n        /* \"#utility.yul\":6684:6688   */\n      dup2\n        /* \"#utility.yul\":6680:6700   */\n      sub\n        /* \"#utility.yul\":6676:6677   */\n      0x00\n        /* \"#utility.yul\":6665:6674   */\n      dup4\n        /* \"#utility.yul\":6661:6678   */\n      add\n        /* \"#utility.yul\":6654:6701   */\n      mstore\n        /* \"#utility.yul\":6718:6849   */\n      tag_154\n        /* \"#utility.yul\":6844:6848   */\n      dup2\n        /* \"#utility.yul\":6718:6849   */\n      tag_82\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6710:6849   */\n      swap1\n      pop\n        /* \"#utility.yul\":6437:6856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203c305a0dec9251f719aab4e30bec5811dc6cca01ab45dcadcc7009cf7c31b10364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061097f8061001c5f395ff3fe60806040526004361061004d575f3560e01c806327e235e3146100a95780632e1a7d4d146100e5578063a9059cbb1461010d578063d0e30db014610135578063f8b2cb4f1461013f576100a5565b366100a557345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461009d91906105f6565b925050819055005b5f80fd5b3480156100b4575f80fd5b506100cf60048036038101906100ca9190610687565b61017b565b6040516100dc91906106c1565b60405180910390f35b3480156100f0575f80fd5b5061010b60048036038101906101069190610704565b61018f565b005b348015610118575f80fd5b50610133600480360381019061012e919061076a565b6102a7565b005b61013d6104e5565b005b34801561014a575f80fd5b5061016560048036038101906101609190610687565b61057b565b60405161017291906106c1565b60405180910390f35b5f602052805f5260405f205f915090505481565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561020e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020590610802565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102599190610820565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156102a3573d5f803e3d5ffd5b5050565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610802565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b9061089d565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103df9190610820565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461043191906105f6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561047b573d5f803e3d5ffd5b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82836040516104d991906106c1565b60405180910390a35050565b5f3411610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e9061092b565b60405180910390fd5b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461057291906105f6565b92505081905550565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610600826105c0565b915061060b836105c0565b9250828201905080821115610623576106226105c9565b5b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106568261062d565b9050919050565b6106668161064c565b8114610670575f80fd5b50565b5f813590506106818161065d565b92915050565b5f6020828403121561069c5761069b610629565b5b5f6106a984828501610673565b91505092915050565b6106bb816105c0565b82525050565b5f6020820190506106d45f8301846106b2565b92915050565b6106e3816105c0565b81146106ed575f80fd5b50565b5f813590506106fe816106da565b92915050565b5f6020828403121561071957610718610629565b5b5f610726848285016106f0565b91505092915050565b5f6107398261062d565b9050919050565b6107498161072f565b8114610753575f80fd5b50565b5f8135905061076481610740565b92915050565b5f80604083850312156107805761077f610629565b5b5f61078d85828601610756565b925050602061079e858286016106f0565b9150509250929050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63652e00000000000000000000005f82015250565b5f6107ec6015836107a8565b91506107f7826107b8565b602082019050919050565b5f6020820190508181035f830152610819816107e0565b9050919050565b5f61082a826105c0565b9150610835836105c0565b925082820390508181111561084d5761084c6105c9565b5b92915050565b7f496e76616c696420616464726573732e000000000000000000000000000000005f82015250565b5f6108876010836107a8565b915061089282610853565b602082019050919050565b5f6020820190508181035f8301526108b48161087b565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f2e0000000000000000000000000000000000000000000000602082015250565b5f6109156029836107a8565b9150610920826108bb565b604082019050919050565b5f6020820190508181035f83015261094281610909565b905091905056fea26469706673582212203c305a0dec9251f719aab4e30bec5811dc6cca01ab45dcadcc7009cf7c31b10364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x97F DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x13F JUMPI PUSH2 0xA5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA5 JUMPI CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7DB7852B30FC413C4A90995F03D9F21E64C45D0DDC8324A8CE4C730A051CBF82 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x600 DUP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x60B DUP4 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x623 JUMPI PUSH2 0x622 PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x656 DUP3 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x64C JUMP JUMPDEST DUP2 EQ PUSH2 0x670 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x681 DUP2 PUSH2 0x65D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A9 DUP5 DUP3 DUP6 ADD PUSH2 0x673 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x5C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E3 DUP2 PUSH2 0x5C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6FE DUP2 PUSH2 0x6DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x726 DUP5 DUP3 DUP6 ADD PUSH2 0x6F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x739 DUP3 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x72F JUMP JUMPDEST DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x764 DUP2 PUSH2 0x740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x78D DUP6 DUP3 DUP7 ADD PUSH2 0x756 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x79E DUP6 DUP3 DUP7 ADD PUSH2 0x6F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7EC PUSH1 0x15 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F7 DUP3 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x819 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x82A DUP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x835 DUP4 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573732E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x887 PUSH1 0x10 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x892 DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B4 DUP2 PUSH2 0x87B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F2E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x915 PUSH1 0x29 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x920 DUP3 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x942 DUP2 PUSH2 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY ADDRESS GAS 0xD 0xEC SWAP3 MLOAD 0xF7 NOT 0xAA 0xB4 0xE3 SIGNEXTEND 0xEC PC GT 0xDC PUSH13 0xCA01AB45DCADCC7009CF7C31B1 SUB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "121:1539:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_930": {
									"entryPoint": null,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balances_792": {
									"entryPoint": 379,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_820": {
									"entryPoint": 1253,
									"id": 820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_918": {
									"entryPoint": 1403,
									"id": 918,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transfer_906": {
									"entryPoint": 679,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_852": {
									"entryPoint": 399,
									"id": 852,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6859:6",
										"nodeType": "YulBlock",
										"src": "0:6859:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:6",
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nativeSrc": "62:16:6",
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:6",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nativeSrc": "118:152:6",
													"nodeType": "YulBlock",
													"src": "118:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:6",
																		"nodeType": "YulLiteral",
																		"src": "135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:6",
																		"nodeType": "YulLiteral",
																		"src": "138:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:6"
																},
																"nativeSrc": "128:88:6",
																"nodeType": "YulFunctionCall",
																"src": "128:88:6"
															},
															"nativeSrc": "128:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "232:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:6",
																		"nodeType": "YulLiteral",
																		"src": "235:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:6"
																},
																"nativeSrc": "225:15:6",
																"nodeType": "YulFunctionCall",
																"src": "225:15:6"
															},
															"nativeSrc": "225:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:6",
																		"nodeType": "YulLiteral",
																		"src": "256:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:6",
																		"nodeType": "YulLiteral",
																		"src": "259:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:6"
																},
																"nativeSrc": "249:15:6",
																"nodeType": "YulFunctionCall",
																"src": "249:15:6"
															},
															"nativeSrc": "249:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:6"
											},
											{
												"body": {
													"nativeSrc": "320:147:6",
													"nodeType": "YulBlock",
													"src": "320:147:6",
													"statements": [
														{
															"nativeSrc": "330:25:6",
															"nodeType": "YulAssignment",
															"src": "330:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:6"
																},
																"nativeSrc": "335:20:6",
																"nodeType": "YulFunctionCall",
																"src": "335:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:6"
																}
															]
														},
														{
															"nativeSrc": "364:25:6",
															"nodeType": "YulAssignment",
															"src": "364:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:6"
																},
																"nativeSrc": "369:20:6",
																"nodeType": "YulFunctionCall",
																"src": "369:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:6"
																}
															]
														},
														{
															"nativeSrc": "398:16:6",
															"nodeType": "YulAssignment",
															"src": "398:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:6"
																},
																"nativeSrc": "405:9:6",
																"nodeType": "YulFunctionCall",
																"src": "405:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:6",
																"nodeType": "YulBlock",
																"src": "438:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:6"
																			},
																			"nativeSrc": "440:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:6"
																		},
																		"nativeSrc": "440:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:6"
																},
																"nativeSrc": "427:10:6",
																"nodeType": "YulFunctionCall",
																"src": "427:10:6"
															},
															"nativeSrc": "424:36:6",
															"nodeType": "YulIf",
															"src": "424:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:6",
														"nodeType": "YulTypedName",
														"src": "307:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:6",
														"nodeType": "YulTypedName",
														"src": "310:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:6",
														"nodeType": "YulTypedName",
														"src": "316:3:6",
														"type": ""
													}
												],
												"src": "276:191:6"
											},
											{
												"body": {
													"nativeSrc": "513:35:6",
													"nodeType": "YulBlock",
													"src": "513:35:6",
													"statements": [
														{
															"nativeSrc": "523:19:6",
															"nodeType": "YulAssignment",
															"src": "523:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "539:2:6",
																		"nodeType": "YulLiteral",
																		"src": "539:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "533:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "533:5:6"
																},
																"nativeSrc": "533:9:6",
																"nodeType": "YulFunctionCall",
																"src": "533:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "523:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "473:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "506:6:6",
														"nodeType": "YulTypedName",
														"src": "506:6:6",
														"type": ""
													}
												],
												"src": "473:75:6"
											},
											{
												"body": {
													"nativeSrc": "643:28:6",
													"nodeType": "YulBlock",
													"src": "643:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "660:1:6",
																		"nodeType": "YulLiteral",
																		"src": "660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "663:1:6",
																		"nodeType": "YulLiteral",
																		"src": "663:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "653:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:6"
																},
																"nativeSrc": "653:12:6",
																"nodeType": "YulFunctionCall",
																"src": "653:12:6"
															},
															"nativeSrc": "653:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "653:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "554:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "554:117:6"
											},
											{
												"body": {
													"nativeSrc": "766:28:6",
													"nodeType": "YulBlock",
													"src": "766:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:6",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "786:1:6",
																		"nodeType": "YulLiteral",
																		"src": "786:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "776:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:6"
																},
																"nativeSrc": "776:12:6",
																"nodeType": "YulFunctionCall",
																"src": "776:12:6"
															},
															"nativeSrc": "776:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "776:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "677:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:6"
											},
											{
												"body": {
													"nativeSrc": "845:81:6",
													"nodeType": "YulBlock",
													"src": "845:81:6",
													"statements": [
														{
															"nativeSrc": "855:65:6",
															"nodeType": "YulAssignment",
															"src": "855:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "870:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "870:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "877:42:6",
																		"nodeType": "YulLiteral",
																		"src": "877:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:6"
																},
																"nativeSrc": "866:54:6",
																"nodeType": "YulFunctionCall",
																"src": "866:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "855:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "855:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "800:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "827:5:6",
														"nodeType": "YulTypedName",
														"src": "827:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "837:7:6",
														"nodeType": "YulTypedName",
														"src": "837:7:6",
														"type": ""
													}
												],
												"src": "800:126:6"
											},
											{
												"body": {
													"nativeSrc": "977:51:6",
													"nodeType": "YulBlock",
													"src": "977:51:6",
													"statements": [
														{
															"nativeSrc": "987:35:6",
															"nodeType": "YulAssignment",
															"src": "987:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1016:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1016:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "998:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "998:17:6"
																},
																"nativeSrc": "998:24:6",
																"nodeType": "YulFunctionCall",
																"src": "998:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "987:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "987:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "932:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "959:5:6",
														"nodeType": "YulTypedName",
														"src": "959:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "969:7:6",
														"nodeType": "YulTypedName",
														"src": "969:7:6",
														"type": ""
													}
												],
												"src": "932:96:6"
											},
											{
												"body": {
													"nativeSrc": "1077:79:6",
													"nodeType": "YulBlock",
													"src": "1077:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1134:16:6",
																"nodeType": "YulBlock",
																"src": "1134:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1143:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1143:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1146:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1136:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1136:6:6"
																			},
																			"nativeSrc": "1136:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1136:12:6"
																		},
																		"nativeSrc": "1136:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1136:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1100:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1100:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1125:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1107:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1107:17:6"
																				},
																				"nativeSrc": "1107:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1107:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1097:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1097:2:6"
																		},
																		"nativeSrc": "1097:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1097:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1090:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:6"
																},
																"nativeSrc": "1090:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1090:43:6"
															},
															"nativeSrc": "1087:63:6",
															"nodeType": "YulIf",
															"src": "1087:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1034:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1070:5:6",
														"nodeType": "YulTypedName",
														"src": "1070:5:6",
														"type": ""
													}
												],
												"src": "1034:122:6"
											},
											{
												"body": {
													"nativeSrc": "1214:87:6",
													"nodeType": "YulBlock",
													"src": "1214:87:6",
													"statements": [
														{
															"nativeSrc": "1224:29:6",
															"nodeType": "YulAssignment",
															"src": "1224:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1246:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1246:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1233:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1233:12:6"
																},
																"nativeSrc": "1233:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1233:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1224:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1224:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1289:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1289:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1262:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1262:26:6"
																},
																"nativeSrc": "1262:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1262:33:6"
															},
															"nativeSrc": "1262:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1262:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1162:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1192:6:6",
														"nodeType": "YulTypedName",
														"src": "1192:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1200:3:6",
														"nodeType": "YulTypedName",
														"src": "1200:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1208:5:6",
														"nodeType": "YulTypedName",
														"src": "1208:5:6",
														"type": ""
													}
												],
												"src": "1162:139:6"
											},
											{
												"body": {
													"nativeSrc": "1373:263:6",
													"nodeType": "YulBlock",
													"src": "1373:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1419:83:6",
																"nodeType": "YulBlock",
																"src": "1419:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1421:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1421:77:6"
																			},
																			"nativeSrc": "1421:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1421:79:6"
																		},
																		"nativeSrc": "1421:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1421:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1394:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1394:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1390:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1390:3:6"
																		},
																		"nativeSrc": "1390:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1390:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1386:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:6"
																},
																"nativeSrc": "1386:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1386:32:6"
															},
															"nativeSrc": "1383:119:6",
															"nodeType": "YulIf",
															"src": "1383:119:6"
														},
														{
															"nativeSrc": "1512:117:6",
															"nodeType": "YulBlock",
															"src": "1512:117:6",
															"statements": [
																{
																	"nativeSrc": "1527:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1527:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1541:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1531:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1531:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1556:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1556:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1591:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1591:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1602:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1602:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1587:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1587:3:6"
																				},
																				"nativeSrc": "1587:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1587:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1611:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1611:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1566:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1566:20:6"
																		},
																		"nativeSrc": "1566:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1566:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1556:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1556:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1307:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1343:9:6",
														"nodeType": "YulTypedName",
														"src": "1343:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1354:7:6",
														"nodeType": "YulTypedName",
														"src": "1354:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1366:6:6",
														"nodeType": "YulTypedName",
														"src": "1366:6:6",
														"type": ""
													}
												],
												"src": "1307:329:6"
											},
											{
												"body": {
													"nativeSrc": "1707:53:6",
													"nodeType": "YulBlock",
													"src": "1707:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1724:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1724:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1747:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1747:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1729:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1729:17:6"
																		},
																		"nativeSrc": "1729:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1729:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1717:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:6"
																},
																"nativeSrc": "1717:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1717:37:6"
															},
															"nativeSrc": "1717:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1717:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1642:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1695:5:6",
														"nodeType": "YulTypedName",
														"src": "1695:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1702:3:6",
														"nodeType": "YulTypedName",
														"src": "1702:3:6",
														"type": ""
													}
												],
												"src": "1642:118:6"
											},
											{
												"body": {
													"nativeSrc": "1864:124:6",
													"nodeType": "YulBlock",
													"src": "1864:124:6",
													"statements": [
														{
															"nativeSrc": "1874:26:6",
															"nodeType": "YulAssignment",
															"src": "1874:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1886:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1886:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1897:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1897:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1882:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:6"
																},
																"nativeSrc": "1882:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1882:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1954:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1967:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1967:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1978:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1978:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1963:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1963:3:6"
																		},
																		"nativeSrc": "1963:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1963:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1910:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1910:43:6"
																},
																"nativeSrc": "1910:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1910:71:6"
															},
															"nativeSrc": "1910:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1910:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1766:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1836:9:6",
														"nodeType": "YulTypedName",
														"src": "1836:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1848:6:6",
														"nodeType": "YulTypedName",
														"src": "1848:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1859:4:6",
														"nodeType": "YulTypedName",
														"src": "1859:4:6",
														"type": ""
													}
												],
												"src": "1766:222:6"
											},
											{
												"body": {
													"nativeSrc": "2037:79:6",
													"nodeType": "YulBlock",
													"src": "2037:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:6",
																"nodeType": "YulBlock",
																"src": "2094:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:6"
																			},
																			"nativeSrc": "2096:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:6"
																		},
																		"nativeSrc": "2096:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2060:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2085:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2085:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2067:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2067:17:6"
																				},
																				"nativeSrc": "2067:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2067:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2057:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2057:2:6"
																		},
																		"nativeSrc": "2057:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2057:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:6"
																},
																"nativeSrc": "2050:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2050:43:6"
															},
															"nativeSrc": "2047:63:6",
															"nodeType": "YulIf",
															"src": "2047:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1994:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2030:5:6",
														"nodeType": "YulTypedName",
														"src": "2030:5:6",
														"type": ""
													}
												],
												"src": "1994:122:6"
											},
											{
												"body": {
													"nativeSrc": "2174:87:6",
													"nodeType": "YulBlock",
													"src": "2174:87:6",
													"statements": [
														{
															"nativeSrc": "2184:29:6",
															"nodeType": "YulAssignment",
															"src": "2184:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2206:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2193:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2193:12:6"
																},
																"nativeSrc": "2193:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2193:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2184:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2184:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2249:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2249:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2222:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2222:26:6"
																},
																"nativeSrc": "2222:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2222:33:6"
															},
															"nativeSrc": "2222:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2222:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2122:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2152:6:6",
														"nodeType": "YulTypedName",
														"src": "2152:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2160:3:6",
														"nodeType": "YulTypedName",
														"src": "2160:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2168:5:6",
														"nodeType": "YulTypedName",
														"src": "2168:5:6",
														"type": ""
													}
												],
												"src": "2122:139:6"
											},
											{
												"body": {
													"nativeSrc": "2333:263:6",
													"nodeType": "YulBlock",
													"src": "2333:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2379:83:6",
																"nodeType": "YulBlock",
																"src": "2379:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2381:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2381:77:6"
																			},
																			"nativeSrc": "2381:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2381:79:6"
																		},
																		"nativeSrc": "2381:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2354:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2354:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2350:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:6"
																		},
																		"nativeSrc": "2350:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2346:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:6"
																},
																"nativeSrc": "2346:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2346:32:6"
															},
															"nativeSrc": "2343:119:6",
															"nodeType": "YulIf",
															"src": "2343:119:6"
														},
														{
															"nativeSrc": "2472:117:6",
															"nodeType": "YulBlock",
															"src": "2472:117:6",
															"statements": [
																{
																	"nativeSrc": "2487:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2487:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2501:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2501:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2491:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2491:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2516:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2516:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2551:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2551:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2562:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2562:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2547:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2547:3:6"
																				},
																				"nativeSrc": "2547:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2547:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2571:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2571:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2526:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2526:20:6"
																		},
																		"nativeSrc": "2526:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2516:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2516:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2267:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2303:9:6",
														"nodeType": "YulTypedName",
														"src": "2303:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2314:7:6",
														"nodeType": "YulTypedName",
														"src": "2314:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2326:6:6",
														"nodeType": "YulTypedName",
														"src": "2326:6:6",
														"type": ""
													}
												],
												"src": "2267:329:6"
											},
											{
												"body": {
													"nativeSrc": "2655:51:6",
													"nodeType": "YulBlock",
													"src": "2655:51:6",
													"statements": [
														{
															"nativeSrc": "2665:35:6",
															"nodeType": "YulAssignment",
															"src": "2665:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2694:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2694:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2676:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2676:17:6"
																},
																"nativeSrc": "2676:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2676:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2665:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2665:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "2602:104:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2637:5:6",
														"nodeType": "YulTypedName",
														"src": "2637:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2647:7:6",
														"nodeType": "YulTypedName",
														"src": "2647:7:6",
														"type": ""
													}
												],
												"src": "2602:104:6"
											},
											{
												"body": {
													"nativeSrc": "2763:87:6",
													"nodeType": "YulBlock",
													"src": "2763:87:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2828:16:6",
																"nodeType": "YulBlock",
																"src": "2828:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2837:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2837:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2840:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2840:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2830:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2830:6:6"
																			},
																			"nativeSrc": "2830:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:12:6"
																		},
																		"nativeSrc": "2830:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2786:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2786:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2819:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2819:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "2793:25:6",
																					"nodeType": "YulIdentifier",
																					"src": "2793:25:6"
																				},
																				"nativeSrc": "2793:32:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2793:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2783:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2783:2:6"
																		},
																		"nativeSrc": "2783:43:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2776:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2776:6:6"
																},
																"nativeSrc": "2776:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2776:51:6"
															},
															"nativeSrc": "2773:71:6",
															"nodeType": "YulIf",
															"src": "2773:71:6"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "2712:138:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2756:5:6",
														"nodeType": "YulTypedName",
														"src": "2756:5:6",
														"type": ""
													}
												],
												"src": "2712:138:6"
											},
											{
												"body": {
													"nativeSrc": "2916:95:6",
													"nodeType": "YulBlock",
													"src": "2916:95:6",
													"statements": [
														{
															"nativeSrc": "2926:29:6",
															"nodeType": "YulAssignment",
															"src": "2926:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2948:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2948:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2935:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2935:12:6"
																},
																"nativeSrc": "2935:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2935:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2926:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2926:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "2964:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:34:6"
																},
																"nativeSrc": "2964:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2964:41:6"
															},
															"nativeSrc": "2964:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "2964:41:6"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "2856:155:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2894:6:6",
														"nodeType": "YulTypedName",
														"src": "2894:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2902:3:6",
														"nodeType": "YulTypedName",
														"src": "2902:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2910:5:6",
														"nodeType": "YulTypedName",
														"src": "2910:5:6",
														"type": ""
													}
												],
												"src": "2856:155:6"
											},
											{
												"body": {
													"nativeSrc": "3108:399:6",
													"nodeType": "YulBlock",
													"src": "3108:399:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3154:83:6",
																"nodeType": "YulBlock",
																"src": "3154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3156:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3156:77:6"
																			},
																			"nativeSrc": "3156:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3156:79:6"
																		},
																		"nativeSrc": "3156:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3129:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3138:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:6"
																		},
																		"nativeSrc": "3125:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:6"
																},
																"nativeSrc": "3121:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3121:32:6"
															},
															"nativeSrc": "3118:119:6",
															"nodeType": "YulIf",
															"src": "3118:119:6"
														},
														{
															"nativeSrc": "3247:125:6",
															"nodeType": "YulBlock",
															"src": "3247:125:6",
															"statements": [
																{
																	"nativeSrc": "3262:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3262:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3276:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3266:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3291:71:6",
																	"nodeType": "YulAssignment",
																	"src": "3291:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3334:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3334:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3345:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3345:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3330:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3330:3:6"
																				},
																				"nativeSrc": "3330:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3330:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3354:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3354:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "3301:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3301:28:6"
																		},
																		"nativeSrc": "3301:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3291:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3291:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3382:118:6",
															"nodeType": "YulBlock",
															"src": "3382:118:6",
															"statements": [
																{
																	"nativeSrc": "3397:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3397:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3411:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3411:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3401:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3401:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3427:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3427:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3462:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3462:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3473:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3473:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3458:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3458:3:6"
																				},
																				"nativeSrc": "3458:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3458:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3482:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3482:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3437:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3437:20:6"
																		},
																		"nativeSrc": "3437:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3427:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3427:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "3017:490:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3070:9:6",
														"nodeType": "YulTypedName",
														"src": "3070:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3081:7:6",
														"nodeType": "YulTypedName",
														"src": "3081:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3093:6:6",
														"nodeType": "YulTypedName",
														"src": "3093:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3101:6:6",
														"nodeType": "YulTypedName",
														"src": "3101:6:6",
														"type": ""
													}
												],
												"src": "3017:490:6"
											},
											{
												"body": {
													"nativeSrc": "3609:73:6",
													"nodeType": "YulBlock",
													"src": "3609:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3626:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3626:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3631:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3631:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:6"
																},
																"nativeSrc": "3619:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3619:19:6"
															},
															"nativeSrc": "3619:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3619:19:6"
														},
														{
															"nativeSrc": "3647:29:6",
															"nodeType": "YulAssignment",
															"src": "3647:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3666:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3666:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3671:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3671:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3662:3:6"
																},
																"nativeSrc": "3662:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3662:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3647:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3647:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3513:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3581:3:6",
														"nodeType": "YulTypedName",
														"src": "3581:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3586:6:6",
														"nodeType": "YulTypedName",
														"src": "3586:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3597:11:6",
														"nodeType": "YulTypedName",
														"src": "3597:11:6",
														"type": ""
													}
												],
												"src": "3513:169:6"
											},
											{
												"body": {
													"nativeSrc": "3794:65:6",
													"nodeType": "YulBlock",
													"src": "3794:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3816:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3816:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3824:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3824:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3812:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3812:3:6"
																		},
																		"nativeSrc": "3812:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3812:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e63652e",
																		"kind": "string",
																		"nativeSrc": "3828:23:6",
																		"nodeType": "YulLiteral",
																		"src": "3828:23:6",
																		"type": "",
																		"value": "Insufficient balance."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3805:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3805:6:6"
																},
																"nativeSrc": "3805:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3805:47:6"
															},
															"nativeSrc": "3805:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3805:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
												"nativeSrc": "3688:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3786:6:6",
														"nodeType": "YulTypedName",
														"src": "3786:6:6",
														"type": ""
													}
												],
												"src": "3688:171:6"
											},
											{
												"body": {
													"nativeSrc": "4011:220:6",
													"nodeType": "YulBlock",
													"src": "4011:220:6",
													"statements": [
														{
															"nativeSrc": "4021:74:6",
															"nodeType": "YulAssignment",
															"src": "4021:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4087:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4087:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4028:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4028:58:6"
																},
																"nativeSrc": "4028:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4028:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4193:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4193:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																	"nativeSrc": "4104:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4104:88:6"
																},
																"nativeSrc": "4104:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4104:93:6"
															},
															"nativeSrc": "4104:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4104:93:6"
														},
														{
															"nativeSrc": "4206:19:6",
															"nodeType": "YulAssignment",
															"src": "4206:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4217:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4217:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4222:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4222:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:6"
																},
																"nativeSrc": "4213:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4213:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3865:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3999:3:6",
														"nodeType": "YulTypedName",
														"src": "3999:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4007:3:6",
														"nodeType": "YulTypedName",
														"src": "4007:3:6",
														"type": ""
													}
												],
												"src": "3865:366:6"
											},
											{
												"body": {
													"nativeSrc": "4408:248:6",
													"nodeType": "YulBlock",
													"src": "4408:248:6",
													"statements": [
														{
															"nativeSrc": "4418:26:6",
															"nodeType": "YulAssignment",
															"src": "4418:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4430:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:6"
																},
																"nativeSrc": "4426:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4426:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4418:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4476:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:6"
																		},
																		"nativeSrc": "4461:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4461:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4484:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4484:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4490:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4490:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4480:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:6"
																		},
																		"nativeSrc": "4480:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4480:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:6"
																},
																"nativeSrc": "4454:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4454:47:6"
															},
															"nativeSrc": "4454:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4454:47:6"
														},
														{
															"nativeSrc": "4510:139:6",
															"nodeType": "YulAssignment",
															"src": "4510:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4644:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4644:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4518:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4518:124:6"
																},
																"nativeSrc": "4518:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4518:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4510:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4510:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4237:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4388:9:6",
														"nodeType": "YulTypedName",
														"src": "4388:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4403:4:6",
														"nodeType": "YulTypedName",
														"src": "4403:4:6",
														"type": ""
													}
												],
												"src": "4237:419:6"
											},
											{
												"body": {
													"nativeSrc": "4707:149:6",
													"nodeType": "YulBlock",
													"src": "4707:149:6",
													"statements": [
														{
															"nativeSrc": "4717:25:6",
															"nodeType": "YulAssignment",
															"src": "4717:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4740:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4740:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4722:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:17:6"
																},
																"nativeSrc": "4722:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4717:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:1:6"
																}
															]
														},
														{
															"nativeSrc": "4751:25:6",
															"nodeType": "YulAssignment",
															"src": "4751:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4774:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4756:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4756:17:6"
																},
																"nativeSrc": "4756:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4756:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4751:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:1:6"
																}
															]
														},
														{
															"nativeSrc": "4785:17:6",
															"nodeType": "YulAssignment",
															"src": "4785:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4797:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4797:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4800:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4800:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4793:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:6"
																},
																"nativeSrc": "4793:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4793:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4785:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4827:22:6",
																"nodeType": "YulBlock",
																"src": "4827:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4829:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4829:16:6"
																			},
																			"nativeSrc": "4829:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4829:18:6"
																		},
																		"nativeSrc": "4829:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4829:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4818:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4818:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4824:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4824:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4815:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4815:2:6"
																},
																"nativeSrc": "4815:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4815:11:6"
															},
															"nativeSrc": "4812:37:6",
															"nodeType": "YulIf",
															"src": "4812:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4662:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4693:1:6",
														"nodeType": "YulTypedName",
														"src": "4693:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4696:1:6",
														"nodeType": "YulTypedName",
														"src": "4696:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4702:4:6",
														"nodeType": "YulTypedName",
														"src": "4702:4:6",
														"type": ""
													}
												],
												"src": "4662:194:6"
											},
											{
												"body": {
													"nativeSrc": "4968:60:6",
													"nodeType": "YulBlock",
													"src": "4968:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4990:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4990:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4998:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4998:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4986:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4986:3:6"
																		},
																		"nativeSrc": "4986:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:14:6"
																	},
																	{
																		"hexValue": "496e76616c696420616464726573732e",
																		"kind": "string",
																		"nativeSrc": "5002:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5002:18:6",
																		"type": "",
																		"value": "Invalid address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4979:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4979:6:6"
																},
																"nativeSrc": "4979:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4979:42:6"
															},
															"nativeSrc": "4979:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "4979:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
												"nativeSrc": "4862:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4960:6:6",
														"nodeType": "YulTypedName",
														"src": "4960:6:6",
														"type": ""
													}
												],
												"src": "4862:166:6"
											},
											{
												"body": {
													"nativeSrc": "5180:220:6",
													"nodeType": "YulBlock",
													"src": "5180:220:6",
													"statements": [
														{
															"nativeSrc": "5190:74:6",
															"nodeType": "YulAssignment",
															"src": "5190:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5256:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5261:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5261:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5197:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5197:58:6"
																},
																"nativeSrc": "5197:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5197:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5190:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5362:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5362:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
																	"nativeSrc": "5273:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5273:88:6"
																},
																"nativeSrc": "5273:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5273:93:6"
															},
															"nativeSrc": "5273:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5273:93:6"
														},
														{
															"nativeSrc": "5375:19:6",
															"nodeType": "YulAssignment",
															"src": "5375:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5386:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5391:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5391:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5382:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5382:3:6"
																},
																"nativeSrc": "5382:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5382:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5375:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5034:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5168:3:6",
														"nodeType": "YulTypedName",
														"src": "5168:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5176:3:6",
														"nodeType": "YulTypedName",
														"src": "5176:3:6",
														"type": ""
													}
												],
												"src": "5034:366:6"
											},
											{
												"body": {
													"nativeSrc": "5577:248:6",
													"nodeType": "YulBlock",
													"src": "5577:248:6",
													"statements": [
														{
															"nativeSrc": "5587:26:6",
															"nodeType": "YulAssignment",
															"src": "5587:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5599:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5599:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5610:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5610:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5595:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:6"
																},
																"nativeSrc": "5595:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5595:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5587:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5587:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5645:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5645:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:6"
																		},
																		"nativeSrc": "5630:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5653:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5653:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5659:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:6"
																		},
																		"nativeSrc": "5649:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5649:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5623:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:6"
																},
																"nativeSrc": "5623:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5623:47:6"
															},
															"nativeSrc": "5623:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5623:47:6"
														},
														{
															"nativeSrc": "5679:139:6",
															"nodeType": "YulAssignment",
															"src": "5679:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5813:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5813:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5687:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:124:6"
																},
																"nativeSrc": "5687:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5687:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5679:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5679:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5406:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5557:9:6",
														"nodeType": "YulTypedName",
														"src": "5557:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5572:4:6",
														"nodeType": "YulTypedName",
														"src": "5572:4:6",
														"type": ""
													}
												],
												"src": "5406:419:6"
											},
											{
												"body": {
													"nativeSrc": "5937:122:6",
													"nodeType": "YulBlock",
													"src": "5937:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5959:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5967:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5967:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5955:3:6"
																		},
																		"nativeSrc": "5955:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5955:14:6"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "5971:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5971:34:6",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5948:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:6"
																},
																"nativeSrc": "5948:58:6",
																"nodeType": "YulFunctionCall",
																"src": "5948:58:6"
															},
															"nativeSrc": "5948:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "5948:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6027:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6035:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6035:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6023:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:6"
																		},
																		"nativeSrc": "6023:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:15:6"
																	},
																	{
																		"hexValue": "68616e207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "6040:11:6",
																		"nodeType": "YulLiteral",
																		"src": "6040:11:6",
																		"type": "",
																		"value": "han zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:6"
																},
																"nativeSrc": "6016:36:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:36:6"
															},
															"nativeSrc": "6016:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "6016:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f",
												"nativeSrc": "5831:228:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5929:6:6",
														"nodeType": "YulTypedName",
														"src": "5929:6:6",
														"type": ""
													}
												],
												"src": "5831:228:6"
											},
											{
												"body": {
													"nativeSrc": "6211:220:6",
													"nodeType": "YulBlock",
													"src": "6211:220:6",
													"statements": [
														{
															"nativeSrc": "6221:74:6",
															"nodeType": "YulAssignment",
															"src": "6221:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6287:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6287:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6292:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6292:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6228:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6228:58:6"
																},
																"nativeSrc": "6228:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6228:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6393:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6393:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f",
																	"nativeSrc": "6304:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6304:88:6"
																},
																"nativeSrc": "6304:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6304:93:6"
															},
															"nativeSrc": "6304:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6304:93:6"
														},
														{
															"nativeSrc": "6406:19:6",
															"nodeType": "YulAssignment",
															"src": "6406:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6417:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6422:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6413:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:6"
																},
																"nativeSrc": "6413:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6413:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6406:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6406:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6065:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6199:3:6",
														"nodeType": "YulTypedName",
														"src": "6199:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6207:3:6",
														"nodeType": "YulTypedName",
														"src": "6207:3:6",
														"type": ""
													}
												],
												"src": "6065:366:6"
											},
											{
												"body": {
													"nativeSrc": "6608:248:6",
													"nodeType": "YulBlock",
													"src": "6608:248:6",
													"statements": [
														{
															"nativeSrc": "6618:26:6",
															"nodeType": "YulAssignment",
															"src": "6618:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6630:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6630:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6641:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6641:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6626:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:6"
																},
																"nativeSrc": "6626:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6626:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6618:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6618:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6676:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:6"
																		},
																		"nativeSrc": "6661:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6684:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6684:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6690:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6690:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6680:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6680:3:6"
																		},
																		"nativeSrc": "6680:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6680:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6654:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:6"
																},
																"nativeSrc": "6654:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6654:47:6"
															},
															"nativeSrc": "6654:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6654:47:6"
														},
														{
															"nativeSrc": "6710:139:6",
															"nodeType": "YulAssignment",
															"src": "6710:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6844:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6844:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6718:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6718:124:6"
																},
																"nativeSrc": "6718:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6718:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6710:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6710:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6437:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6588:9:6",
														"nodeType": "YulTypedName",
														"src": "6588:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6603:4:6",
														"nodeType": "YulTypedName",
														"src": "6603:4:6",
														"type": ""
													}
												],
												"src": "6437:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004d575f3560e01c806327e235e3146100a95780632e1a7d4d146100e5578063a9059cbb1461010d578063d0e30db014610135578063f8b2cb4f1461013f576100a5565b366100a557345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461009d91906105f6565b925050819055005b5f80fd5b3480156100b4575f80fd5b506100cf60048036038101906100ca9190610687565b61017b565b6040516100dc91906106c1565b60405180910390f35b3480156100f0575f80fd5b5061010b60048036038101906101069190610704565b61018f565b005b348015610118575f80fd5b50610133600480360381019061012e919061076a565b6102a7565b005b61013d6104e5565b005b34801561014a575f80fd5b5061016560048036038101906101609190610687565b61057b565b60405161017291906106c1565b60405180910390f35b5f602052805f5260405f205f915090505481565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561020e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020590610802565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102599190610820565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156102a3573d5f803e3d5ffd5b5050565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610802565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b9061089d565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103df9190610820565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461043191906105f6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561047b573d5f803e3d5ffd5b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82836040516104d991906106c1565b60405180910390a35050565b5f3411610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e9061092b565b60405180910390fd5b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461057291906105f6565b92505081905550565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610600826105c0565b915061060b836105c0565b9250828201905080821115610623576106226105c9565b5b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106568261062d565b9050919050565b6106668161064c565b8114610670575f80fd5b50565b5f813590506106818161065d565b92915050565b5f6020828403121561069c5761069b610629565b5b5f6106a984828501610673565b91505092915050565b6106bb816105c0565b82525050565b5f6020820190506106d45f8301846106b2565b92915050565b6106e3816105c0565b81146106ed575f80fd5b50565b5f813590506106fe816106da565b92915050565b5f6020828403121561071957610718610629565b5b5f610726848285016106f0565b91505092915050565b5f6107398261062d565b9050919050565b6107498161072f565b8114610753575f80fd5b50565b5f8135905061076481610740565b92915050565b5f80604083850312156107805761077f610629565b5b5f61078d85828601610756565b925050602061079e858286016106f0565b9150509250929050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63652e00000000000000000000005f82015250565b5f6107ec6015836107a8565b91506107f7826107b8565b602082019050919050565b5f6020820190508181035f830152610819816107e0565b9050919050565b5f61082a826105c0565b9150610835836105c0565b925082820390508181111561084d5761084c6105c9565b5b92915050565b7f496e76616c696420616464726573732e000000000000000000000000000000005f82015250565b5f6108876010836107a8565b915061089282610853565b602082019050919050565b5f6020820190508181035f8301526108b48161087b565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f2e0000000000000000000000000000000000000000000000602082015250565b5f6109156029836107a8565b9150610920826108bb565b604082019050919050565b5f6020820190508181035f83015261094281610909565b905091905056fea26469706673582212203c305a0dec9251f719aab4e30bec5811dc6cca01ab45dcadcc7009cf7c31b10364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x13F JUMPI PUSH2 0xA5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA5 JUMPI CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7DB7852B30FC413C4A90995F03D9F21E64C45D0DDC8324A8CE4C730A051CBF82 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x600 DUP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x60B DUP4 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x623 JUMPI PUSH2 0x622 PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x656 DUP3 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x64C JUMP JUMPDEST DUP2 EQ PUSH2 0x670 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x681 DUP2 PUSH2 0x65D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6A9 DUP5 DUP3 DUP6 ADD PUSH2 0x673 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x5C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E3 DUP2 PUSH2 0x5C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6FE DUP2 PUSH2 0x6DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x726 DUP5 DUP3 DUP6 ADD PUSH2 0x6F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x739 DUP3 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x72F JUMP JUMPDEST DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x764 DUP2 PUSH2 0x740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x629 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x78D DUP6 DUP3 DUP7 ADD PUSH2 0x756 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x79E DUP6 DUP3 DUP7 ADD PUSH2 0x6F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7EC PUSH1 0x15 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F7 DUP3 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x819 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x82A DUP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x835 DUP4 PUSH2 0x5C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573732E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x887 PUSH1 0x10 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x892 DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8B4 DUP2 PUSH2 0x87B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F2E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x915 PUSH1 0x29 DUP4 PUSH2 0x7A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x920 DUP3 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x942 DUP2 PUSH2 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY ADDRESS GAS 0xD 0xEC SWAP3 MLOAD 0xF7 NOT 0xAA 0xB4 0xE3 SIGNEXTEND 0xEC PC GT 0xDC PUSH13 0xCA01AB45DCADCC7009CF7C31B1 SUB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "121:1539:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:9;1616:8;:20;1625:10;1616:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;121:1539;;;;208:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;670:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;948:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;445:164;;;:::i;:::-;;1386:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:43;;;;;;;;;;;;;;;;;:::o;670:216::-;742:8;:20;751:10;742:20;;;;;;;;;;;;;;;;731:7;:31;;723:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;823:7;799:8;:20;808:10;799:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;849:10;841:28;;:37;870:7;841:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:216;:::o;948:378::-;1041:8;:20;1050:10;1041:20;;;;;;;;;;;;;;;;1030:7;:31;;1022:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1121:1;1106:17;;:3;:17;;;1098:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1189:7;1165:8;:20;1174:10;1165:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1224:7;1207:8;:13;1216:3;1207:13;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1242:3;:12;;:21;1255:7;1242:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:3;1281:37;;1293:10;1281:37;;;1310:7;1281:37;;;;;;:::i;:::-;;;;;;;;948:378;;:::o;445:164::-;510:1;498:9;:13;490:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;592:9;568:8;:20;577:10;568:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;445:164::o;1386:112::-;1445:7;1472:8;:18;1481:8;1472:18;;;;;;;;;;;;;;;;1465:25;;1386:112;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;554:117::-;663:1;660;653:12;800:126;837:7;877:42;870:5;866:54;855:65;;800:126;;;:::o;932:96::-;969:7;998:24;1016:5;998:24;:::i;:::-;987:35;;932:96;;;:::o;1034:122::-;1107:24;1125:5;1107:24;:::i;:::-;1100:5;1097:35;1087:63;;1146:1;1143;1136:12;1087:63;1034:122;:::o;1162:139::-;1208:5;1246:6;1233:20;1224:29;;1262:33;1289:5;1262:33;:::i;:::-;1162:139;;;;:::o;1307:329::-;1366:6;1415:2;1403:9;1394:7;1390:23;1386:32;1383:119;;;1421:79;;:::i;:::-;1383:119;1541:1;1566:53;1611:7;1602:6;1591:9;1587:22;1566:53;:::i;:::-;1556:63;;1512:117;1307:329;;;;:::o;1642:118::-;1729:24;1747:5;1729:24;:::i;:::-;1724:3;1717:37;1642:118;;:::o;1766:222::-;1859:4;1897:2;1886:9;1882:18;1874:26;;1910:71;1978:1;1967:9;1963:17;1954:6;1910:71;:::i;:::-;1766:222;;;;:::o;1994:122::-;2067:24;2085:5;2067:24;:::i;:::-;2060:5;2057:35;2047:63;;2106:1;2103;2096:12;2047:63;1994:122;:::o;2122:139::-;2168:5;2206:6;2193:20;2184:29;;2222:33;2249:5;2222:33;:::i;:::-;2122:139;;;;:::o;2267:329::-;2326:6;2375:2;2363:9;2354:7;2350:23;2346:32;2343:119;;;2381:79;;:::i;:::-;2343:119;2501:1;2526:53;2571:7;2562:6;2551:9;2547:22;2526:53;:::i;:::-;2516:63;;2472:117;2267:329;;;;:::o;2602:104::-;2647:7;2676:24;2694:5;2676:24;:::i;:::-;2665:35;;2602:104;;;:::o;2712:138::-;2793:32;2819:5;2793:32;:::i;:::-;2786:5;2783:43;2773:71;;2840:1;2837;2830:12;2773:71;2712:138;:::o;2856:155::-;2910:5;2948:6;2935:20;2926:29;;2964:41;2999:5;2964:41;:::i;:::-;2856:155;;;;:::o;3017:490::-;3093:6;3101;3150:2;3138:9;3129:7;3125:23;3121:32;3118:119;;;3156:79;;:::i;:::-;3118:119;3276:1;3301:61;3354:7;3345:6;3334:9;3330:22;3301:61;:::i;:::-;3291:71;;3247:125;3411:2;3437:53;3482:7;3473:6;3462:9;3458:22;3437:53;:::i;:::-;3427:63;;3382:118;3017:490;;;;;:::o;3513:169::-;3597:11;3631:6;3626:3;3619:19;3671:4;3666:3;3662:14;3647:29;;3513:169;;;;:::o;3688:171::-;3828:23;3824:1;3816:6;3812:14;3805:47;3688:171;:::o;3865:366::-;4007:3;4028:67;4092:2;4087:3;4028:67;:::i;:::-;4021:74;;4104:93;4193:3;4104:93;:::i;:::-;4222:2;4217:3;4213:12;4206:19;;3865:366;;;:::o;4237:419::-;4403:4;4441:2;4430:9;4426:18;4418:26;;4490:9;4484:4;4480:20;4476:1;4465:9;4461:17;4454:47;4518:131;4644:4;4518:131;:::i;:::-;4510:139;;4237:419;;;:::o;4662:194::-;4702:4;4722:20;4740:1;4722:20;:::i;:::-;4717:25;;4756:20;4774:1;4756:20;:::i;:::-;4751:25;;4800:1;4797;4793:9;4785:17;;4824:1;4818:4;4815:11;4812:37;;;4829:18;;:::i;:::-;4812:37;4662:194;;;;:::o;4862:166::-;5002:18;4998:1;4990:6;4986:14;4979:42;4862:166;:::o;5034:366::-;5176:3;5197:67;5261:2;5256:3;5197:67;:::i;:::-;5190:74;;5273:93;5362:3;5273:93;:::i;:::-;5391:2;5386:3;5382:12;5375:19;;5034:366;;;:::o;5406:419::-;5572:4;5610:2;5599:9;5595:18;5587:26;;5659:9;5653:4;5649:20;5645:1;5634:9;5630:17;5623:47;5687:131;5813:4;5687:131;:::i;:::-;5679:139;;5406:419;;;:::o;5831:228::-;5971:34;5967:1;5959:6;5955:14;5948:58;6040:11;6035:2;6027:6;6023:15;6016:36;5831:228;:::o;6065:366::-;6207:3;6228:67;6292:2;6287:3;6228:67;:::i;:::-;6221:74;;6304:93;6393:3;6304:93;:::i;:::-;6422:2;6417:3;6413:12;6406:19;;6065:366;;;:::o;6437:419::-;6603:4;6641:2;6630:9;6626:18;6618:26;;6690:9;6684:4;6680:20;6676:1;6665:9;6661:17;6654:47;6718:131;6844:4;6718:131;:::i;:::-;6710:139;;6437:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "486200",
								"executionCost": "516",
								"totalCost": "486716"
							},
							"external": {
								"balances(address)": "2779",
								"deposit()": "infinite",
								"getBalance(address)": "2895",
								"transfer(address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1660,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c305a0dec9251f719aab4e30bec5811dc6cca01ab45dcadcc7009cf7c31b10364736f6c634300081a0033",
									".code": [
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "27E235E3"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "D0E30DB0"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "F8B2CB4F"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1635,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1616,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 121,
											"end": 1660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 670,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 670,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1386,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1386,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1386,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 208,
											"end": 251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 670,
											"end": 886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 761,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 762,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 742,
											"end": 762,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 731,
											"end": 738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 731,
											"end": 762,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 731,
											"end": 762,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 723,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 723,
											"end": 788,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 723,
											"end": 788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 808,
											"end": 818,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 799,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 799,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 799,
											"end": 830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 859,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 841,
											"end": 869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 841,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1022,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1022,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1123,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1123,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1106,
											"end": 1123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1123,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1098,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1165,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1207,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1303,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "7DB7852B30FC413C4A90995F03D9F21E64C45D0DDC8324A8CE4C730A051CBF82"
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1281,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1318,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 510,
											"end": 511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 498,
											"end": 511,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 490,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 490,
											"end": 557,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 592,
											"end": 601,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 568,
											"end": 576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 577,
											"end": 587,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 568,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 568,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 445,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1445,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1480,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1489,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 554,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 554,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 663,
											"end": 664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 653,
											"end": 665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 800,
											"end": 926,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 800,
											"end": 926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 837,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 866,
											"end": 920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 855,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 855,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1028,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 932,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 969,
											"end": 976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1016,
											"end": 1021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 998,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1107,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1105,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1132,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1087,
											"end": 1150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1148,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1087,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1233,
											"end": 1253,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1289,
											"end": 1294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1262,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1386,
											"end": 1418,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1502,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1383,
											"end": 1502,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1421,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1421,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1500,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1421,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1502,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1383,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1566,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1619,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1566,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1760,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1642,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1729,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1753,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1729,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1910,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1910,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2067,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2222,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2381,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2526,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2706,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2602,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2694,
											"end": 2699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2676,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2676,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2850,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2712,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2793,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2826,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2773,
											"end": 2844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2844,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2773,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2955,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2999,
											"end": 3004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2964,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2964,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 3011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3156,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3301,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3362,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3301,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3362,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3437,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3490,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3437,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3688,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E63652E0000000000000000000000"
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4028,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4193,
											"end": 4196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4104,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4518,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4702,
											"end": 4706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4722,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4756,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4802,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4826,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4849,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4812,
											"end": 4849,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4829,
											"end": 4847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4849,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4812,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5028,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4862,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420616464726573732E00000000000000000000000000000000"
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 5021,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 5028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5256,
											"end": 5259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5197,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5273,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5393,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5669,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5687,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5831,
											"end": 6059,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5831,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 5967,
											"end": 5968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 6006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "PUSH",
											"source": 6,
											"value": "68616E207A65726F2E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5831,
											"end": 6059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5831,
											"end": 6059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6431,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6065,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6292,
											"end": 6294,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6228,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6295,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6228,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6393,
											"end": 6396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6304,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6397,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6304,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6431,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6856,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6437,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6700,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6718,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6849,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6718,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Transaction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"deposit()": "d0e30db0",
							"getBalance(address)": "f8b2cb4f",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Transaction.sol\":\"SimpleTransaction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Transaction.sol\":{\"keccak256\":\"0x85e9bc851c2c989772fd205eb1e7117c364c516de3f9f1d95719c04e85cc823c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b956860ca95123145d8eacb40db9eaf781b176aa51adcaf16cb859cc57b59b80\",\"dweb:/ipfs/Qme1K9UASh1xTs4a2m4ypKYxQPhks9DE7y8vEJfMDe2QFG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 792,
								"contract": "Transaction.sol:SimpleTransaction",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"Transaction.sol": {
				"ast": {
					"absolutePath": "Transaction.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SimpleTransaction": [
							931
						]
					},
					"id": 932,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 932,
							"sourceUnit": 652,
							"src": "62:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleTransaction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 931,
							"linearizedBaseContracts": [
								931
							],
							"name": "SimpleTransaction",
							"nameLocation": "130:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 792,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "243:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 931,
									"src": "208:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 791,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 789,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "216:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "208:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 790,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "227:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7db7852b30fc413c4a90995f03d9f21e64c45d0ddc8324a8ce4c730a051cbf82",
									"id": 800,
									"name": "Transaction",
									"nameLocation": "315:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "343:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "327:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "365:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "349:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "377:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "369:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:58:5"
									},
									"src": "309:76:5"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "479:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 804,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "498:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "502:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "498:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "510:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "498:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "513:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f",
																"typeString": "literal_string \"Deposit amount must be greater than zero.\""
															},
															"value": "Deposit amount must be greater than zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c4f449b6745604b44df706f97188eab827d6fcb8bd6deb8275b80be9d6a0d6f",
																"typeString": "literal_string \"Deposit amount must be greater than zero.\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "490:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "490:67:5"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 811,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "568:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 814,
														"indexExpression": {
															"expression": {
																"id": 812,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "577:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "581:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "577:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "568:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 815,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "592:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "596:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "592:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "568:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "568:33:5"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "454:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:2:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:0:5"
									},
									"scope": 931,
									"src": "445:164:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "712:174:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "731:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 827,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "742:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 830,
																"indexExpression": {
																	"expression": {
																		"id": 828,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "751:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "755:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "751:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "742:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "731:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e63652e",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															},
															"value": "Insufficient balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "723:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "723:65:5"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "799:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 838,
														"indexExpression": {
															"expression": {
																"id": 836,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "808:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "812:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "808:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "799:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 839,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "823:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "799:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "870:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 844,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "849:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "853:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "849:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "841:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 842,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "841:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "841:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "861:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "841:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "841:37:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "679:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "696:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "688:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:17:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:5"
									},
									"scope": 931,
									"src": "670:216:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1011:315:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "1030:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 861,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1041:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"expression": {
																		"id": 862,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1050:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1054:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1050:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1041:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1030:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e63652e",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1063:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															},
															"value": "Insufficient balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1022:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1022:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "1022:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "1106:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1121:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1113:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 871,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1113:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1113:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1106:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616464726573732e",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
																"typeString": "literal_string \"Invalid address.\""
															},
															"value": "Invalid address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
																"typeString": "literal_string \"Invalid address.\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "1098:46:5"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 879,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1165:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 882,
														"indexExpression": {
															"expression": {
																"id": 880,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1174:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1178:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1174:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1165:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 883,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "1189:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1165:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1165:31:5"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 886,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1207:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 888,
														"indexExpression": {
															"id": 887,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1216:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1207:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 889,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "1224:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "1207:24:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1255:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 892,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1242:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1246:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1242:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "1242:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1293:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1297:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1293:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1305:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 902,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1310:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "Transaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1281:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1281:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "EmitStatement",
												"src": "1276:42:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "957:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "982:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "966:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "966:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:38:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:5"
									},
									"scope": 931,
									"src": "948:378:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "1454:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 913,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "1472:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 915,
													"indexExpression": {
														"id": 914,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1481:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1472:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 912,
												"id": 916,
												"nodeType": "Return",
												"src": "1465:25:5"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1395:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1414:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1406:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:18:5"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1445:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:9:5"
									},
									"scope": 931,
									"src": "1386:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "1605:52:5",
										"statements": [
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 921,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1616:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 924,
														"indexExpression": {
															"expression": {
																"id": 922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1625:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1629:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1625:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1616:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 925,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1640:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1644:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1640:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1616:33:5"
											}
										]
									},
									"id": 930,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:0:5"
									},
									"scope": 931,
									"src": "1578:79:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 932,
							"src": "121:1539:5",
							"usedErrors": [],
							"usedEvents": [
								800
							]
						}
					],
					"src": "33:1629:5"
				},
				"id": 5
			}
		}
	}
}